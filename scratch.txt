TeXSeq (TeXRaw "y = sqrt(x^2) + sin(x) + ") 
       (TeXSeq (TeXBraces (TeXSeq (TeXCommS "int") 
                                  (TeXSeq (TeXRaw "_") 
                                          (TeXSeq (TeXBraces (TeXRaw "3")) 
                                                  (TeXSeq (TeXRaw "^") 
                                                          (TeXSeq (TeXBraces (TeXRaw "4")) 
                                                                  (TeXRaw " cos(12x) dx"))))))) 
               (TeXRaw " + 876x^4\n"))


TeXBraces (TeXEnv "bmatrix" [] (TeXSeq (TeXRaw " ") 



1. check for underscore (helper?)
2. if no underscore, assume it's an unevaluated value -> createSage
3. append to list, [x_11, x_12, linebreak, x_21, x_22], on linebreak end with right bracket
4. Fencepost w/ ampersand, make recursive helper that begins with first element of each row
(TeXSeq (TeXRaw "x_") 
        (TeXSeq (TeXBraces (TeXRaw "11")) 
                (TeXSeq (TeXRaw " & x_") use drop 2?
                        (TeXSeq (TeXBraces (TeXRaw "12")) 
                                (TeXSeq (TeXRaw " ") 
                                        (TeXSeq (TeXLineBreak Nothing False) 
                                                (TeXSeq (TeXRaw " x_") 
                                                        (TeXSeq (TeXBraces (TeXRaw "21")) 
                                                                (TeXSeq (TeXRaw " & x_") 
                                                                        (TeXSeq (TeXBraces (TeXRaw "22")) 
                                                                                (TeXRaw " ")))))))))))))




(TeXBraces (TeXEnv "bmatrix" [] (TeXSeq (TeXRaw " ") 
           
(TeXSeq (TeXRaw "15 & 5x + 2 ") 
        (TeXSeq (TeXLineBreak Nothing False) 
                (TeXRaw " 79294 & 194x + 2483 ")))))))

append all raws, break by ampersands


{ "execute_reply": { "status": "ok", 
                     "execution_count": 1, 
                     "user_expressions": {}, 
                     "payload": []
                   }, 
  "success": true, 
  "stdout": "16 \\, x^{4} \\sin\\left(x^{2}\\right) - 48 \\, x^{2} \\cos\\left(x^{2}\\right) - 12 \\, \\sin\\left x^{2}\\right)\n"
}

(TeXSeq (TeXBraces (TeXSeq (TeXCommS "int") (TeXSeq (TeXRaw "_") (TeXSeq (TeXBraces (TeXRaw "2")) (TeXSeq (TeXRaw "^") (TeXSeq (TeXBraces (TeXRaw "5")) (TeXSeq (TeXCommS ",") (TeXSeq (TeXRaw "sin(4x)") (TeXSeq (TeXCommS ",") (TeXSeq (TeXRaw "+") (TeXSeq (TeXCommS ",") (TeXSeq (TeXRaw "2") (TeXSeq (TeXCommS ",") (TeXRaw "dx")))))))))))))) 


  (TeXSeq (TeXCommS ",") 
          (TeXSeq (TeXCommS ",") 
                  (TeXSeq (TeXRaw "+") 
                          (TeXSeq (TeXCommS ",") 
                                  (TeXSeq (TeXRaw "150x^2") 
                                          (TeXSeq (TeXCommS ",") 
                                                  (TeXSeq (TeXRaw "+") 
                                                          (TeXSeq (TeXCommS ",") 
                                                                  (TeXRaw "2"))))))))))

Right (TeXBraces (TeXSeq (TeXBraces (TeXBraces (TeXSeq (TeXRaw "x^") (TeXSeq (TeXBraces (TeXRaw "12")) (TeXRaw " sin(4x + 21) +"))))) 


(TeXBraces (TeXBraces (TeXSeq (TeXCommS "int") (TeXSeq (TeXRaw "_") (TeXSeq (TeXBraces (TeXRaw "12")) (TeXSeq (TeXRaw "^") (TeXSeq (TeXBraces (TeXRaw "51")) (TeXRaw " x^2 + 210x + 40 dx"))))))))))














